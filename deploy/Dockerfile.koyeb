FROM ubuntu AS builder

RUN apt-get update
RUN apt-get install -y --no-install-recommends \
    openjdk-21-jdk \
    curl \
    unzip \
    jq

ARG IS_PROD
ENV IS_PROD=$IS_PROD
ARG FLAVOR
ENV FLAVOR=$FLAVOR
ARG BUILD_ON_HOST
ENV BUILD_ON_HOST=$BUILD_ON_HOST
ARG COMPOSE_PROFILES
ENV COMPOSE_PROFILES=$COMPOSE_PROFILES
ARG COMPOSE_PROJECT_NAME
ENV COMPOSE_PROJECT_NAME=$COMPOSE_PROJECT_NAME
ARG SEARCH_SERVICE
ENV SEARCH_SERVICE=$SEARCH_SERVICE
ARG LUCENE_BASE_PATH
ENV LUCENE_BASE_PATH=$LUCENE_BASE_PATH
ARG STACK_VERSION
ENV STACK_VERSION=$STACK_VERSION
ARG CLUSTER_NAME
ENV CLUSTER_NAME=$CLUSTER_NAME
ARG LICENSE
ENV LICENSE=$LICENSE
ARG KIBANA_PORT
ENV KIBANA_PORT=$KIBANA_PORT
ARG KIBANA_PASSWORD
ENV KIBANA_PASSWORD=$KIBANA_PASSWORD
ARG ENCRYPTION_KEY
ENV ENCRYPTION_KEY=$ENCRYPTION_KEY
ARG ELASTIC_URL
ENV ELASTIC_URL=$ELASTIC_URL
ARG ES_PORT
ENV ES_PORT=$ES_PORT
ARG CERTS_DIR
ENV CERTS_DIR=$CERTS_DIR
ARG CERT_FILE
ENV CERT_FILE=$CERT_FILE
ARG ELASTIC_NAME
ENV ELASTIC_NAME=$ELASTIC_NAME
ARG ELASTIC_PASSWORD
ENV ELASTIC_PASSWORD=$ELASTIC_PASSWORD
ARG MEDIA_SERVICE
ENV MEDIA_SERVICE=$MEDIA_SERVICE
ARG MINIO_URL
ENV MINIO_URL=$MINIO_URL
ARG MINIO_PORT
ENV MINIO_PORT=$MINIO_PORT
ARG MINIO_PORT_CONSOLE
ENV MINIO_PORT_CONSOLE=$MINIO_PORT_CONSOLE
ARG MINIO_NAME
ENV MINIO_NAME=$MINIO_NAME
ARG MINIO_PASS
ENV MINIO_PASS=$MINIO_PASS
ARG DATABASE_URI
ENV DATABASE_URI=$DATABASE_URI
ARG DATABASE_PORT
ENV DATABASE_PORT=$DATABASE_PORT
ARG DATABASE_DB
ENV DATABASE_DB=$DATABASE_DB
ARG DATABASE_DRIVER
ENV DATABASE_DRIVER=$DATABASE_DRIVER
ARG DATABASE_USER
ENV DATABASE_USER=$DATABASE_USER
ARG DATABASE_PASS
ENV DATABASE_PASS=$DATABASE_PASS
ARG DATABASE_FRONT_PORT
ENV DATABASE_FRONT_PORT=$DATABASE_FRONT_PORT
ARG HMAC_KEY
ENV HMAC_KEY=$HMAC_KEY
ARG BUNKER_VERSION
ENV BUNKER_VERSION=$BUNKER_VERSION
ARG BUNKER_PORT
ENV BUNKER_PORT=$BUNKER_PORT
ARG BUNKER_PORT_SECRET
ENV BUNKER_PORT_SECRET=$BUNKER_PORT_SECRET
ARG SERVER_PORT
ENV SERVER_PORT=$SERVER_PORT
ARG SERVER_URL
ENV SERVER_URL=$SERVER_URL
ARG WS_SERVER_URL
ENV WS_SERVER_URL=$WS_SERVER_URL
ARG PRESET_ENABLE
ENV PRESET_ENABLE=$PRESET_ENABLE
ARG PRESET_WORKING_DIR
ENV PRESET_WORKING_DIR=$PRESET_WORKING_DIR
ARG PRESET_SCRIPT
ENV PRESET_SCRIPT=$PRESET_SCRIPT
ARG PRESET_ENCRYPTED_URI
ENV PRESET_ENCRYPTED_URI=$PRESET_ENCRYPTED_URI
ARG PRESET_ENCRYPTED_PASSWORD
ENV PRESET_ENCRYPTED_PASSWORD=$PRESET_ENCRYPTED_PASSWORD


WORKDIR /app

COPY . .

COPY <<EOF ./generated-mini.env
IS_PROD=${IS_PROD}
FLAVOR=${FLAVOR}
BUILD_ON_HOST=${BUILD_ON_HOST}
COMPOSE_PROFILES=${COMPOSE_PROFILES}
COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
SEARCH_SERVICE=${SEARCH_SERVICE}
LUCENE_BASE_PATH=${LUCENE_BASE_PATH}
STACK_VERSION=${STACK_VERSION}
CLUSTER_NAME=${CLUSTER_NAME}
LICENSE=${LICENSE}
KIBANA_PORT=${KIBANA_PORT}
KIBANA_PASSWORD=${KIBANA_PASSWORD}
ENCRYPTION_KEY=${ENCRYPTION_KEY}
ELASTIC_URL=${ELASTIC_URL}
ES_PORT=${ES_PORT}
CERTS_DIR=${CERTS_DIR}
CERT_FILE=${CERT_FILE}
ELASTIC_NAME=${ELASTIC_NAME}
ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
MEDIA_SERVICE=${MEDIA_SERVICE}
MINIO_URL=${MINIO_URL}
MINIO_PORT=${MINIO_PORT}
MINIO_PORT_CONSOLE=${MINIO_PORT_CONSOLE}
MINIO_NAME=${MINIO_NAME}
MINIO_PASS=${MINIO_PASS}
DATABASE_URI=${DATABASE_URI}
DATABASE_PORT=${DATABASE_PORT}
DATABASE_DB=${DATABASE_DB}
DATABASE_DRIVER=${DATABASE_DRIVER}
DATABASE_USER=${DATABASE_USER}
DATABASE_PASS=${DATABASE_PASS}
DATABASE_FRONT_PORT=${DATABASE_FRONT_PORT}
HMAC_KEY=${HMAC_KEY}
BUNKER_VERSION=${BUNKER_VERSION}
BUNKER_PORT=${BUNKER_PORT}
BUNKER_PORT_SECRET=${BUNKER_PORT_SECRET}
SERVER_PORT=${SERVER_PORT}
SERVER_URL=${SERVER_URL}
WS_SERVER_URL=${WS_SERVER_URL}
PRESET_ENABLE=${PRESET_ENABLE}
PRESET_WORKING_DIR=${PRESET_WORKING_DIR}
PRESET_SCRIPT=${PRESET_SCRIPT}
PRESET_ENCRYPTED_URI=${PRESET_ENCRYPTED_URI}
PRESET_ENCRYPTED_PASSWORD=${PRESET_ENCRYPTED_PASSWORD}
EOF


RUN sed -i 's/\r$//' scripts/* && \
    sed -i 's/\r$//' gradlew && \
    sed -i "s/buildkonfig.flavor=.*/buildkonfig.flavor=${FLAVOR}/" gradle.properties && \
    sed -i "s/server.prod=false/server.prod=${IS_PROD}/" gradle.properties

RUN bash scripts/download_data.sh $PRESET_ENCRYPTED_URI $PRESET_ENCRYPTED_PASSWORD

RUN bash scripts/manual-download-docker-image.sh

ENV IS_HOST=true

RUN --mount=type=cache,target=/root/.gradle \
    sh scripts/build-server-on-condition.sh

FROM koyeb/docker-compose

RUN apk add --no-cache git

ARG IS_PROD
ENV IS_PROD=$IS_PROD
ARG FLAVOR
ENV FLAVOR=$FLAVOR
ARG BUILD_ON_HOST
ENV BUILD_ON_HOST=$BUILD_ON_HOST
ARG COMPOSE_PROFILES
ENV COMPOSE_PROFILES=$COMPOSE_PROFILES
ARG COMPOSE_PROJECT_NAME
ENV COMPOSE_PROJECT_NAME=$COMPOSE_PROJECT_NAME
ARG SEARCH_SERVICE
ENV SEARCH_SERVICE=$SEARCH_SERVICE
ARG LUCENE_BASE_PATH
ENV LUCENE_BASE_PATH=$LUCENE_BASE_PATH
ARG STACK_VERSION
ENV STACK_VERSION=$STACK_VERSION
ARG CLUSTER_NAME
ENV CLUSTER_NAME=$CLUSTER_NAME
ARG LICENSE
ENV LICENSE=$LICENSE
ARG KIBANA_PORT
ENV KIBANA_PORT=$KIBANA_PORT
ARG KIBANA_PASSWORD
ENV KIBANA_PASSWORD=$KIBANA_PASSWORD
ARG ENCRYPTION_KEY
ENV ENCRYPTION_KEY=$ENCRYPTION_KEY
ARG ELASTIC_URL
ENV ELASTIC_URL=$ELASTIC_URL
ARG ES_PORT
ENV ES_PORT=$ES_PORT
ARG CERTS_DIR
ENV CERTS_DIR=$CERTS_DIR
ARG CERT_FILE
ENV CERT_FILE=$CERT_FILE
ARG ELASTIC_NAME
ENV ELASTIC_NAME=$ELASTIC_NAME
ARG ELASTIC_PASSWORD
ENV ELASTIC_PASSWORD=$ELASTIC_PASSWORD
ARG MEDIA_SERVICE
ENV MEDIA_SERVICE=$MEDIA_SERVICE
ARG MINIO_URL
ENV MINIO_URL=$MINIO_URL
ARG MINIO_PORT
ENV MINIO_PORT=$MINIO_PORT
ARG MINIO_PORT_CONSOLE
ENV MINIO_PORT_CONSOLE=$MINIO_PORT_CONSOLE
ARG MINIO_NAME
ENV MINIO_NAME=$MINIO_NAME
ARG MINIO_PASS
ENV MINIO_PASS=$MINIO_PASS
ARG DATABASE_URI
ENV DATABASE_URI=$DATABASE_URI
ARG DATABASE_PORT
ENV DATABASE_PORT=$DATABASE_PORT
ARG DATABASE_DB
ENV DATABASE_DB=$DATABASE_DB
ARG DATABASE_DRIVER
ENV DATABASE_DRIVER=$DATABASE_DRIVER
ARG DATABASE_USER
ENV DATABASE_USER=$DATABASE_USER
ARG DATABASE_PASS
ENV DATABASE_PASS=$DATABASE_PASS
ARG DATABASE_FRONT_PORT
ENV DATABASE_FRONT_PORT=$DATABASE_FRONT_PORT
ARG HMAC_KEY
ENV HMAC_KEY=$HMAC_KEY
ARG BUNKER_VERSION
ENV BUNKER_VERSION=$BUNKER_VERSION
ARG BUNKER_PORT
ENV BUNKER_PORT=$BUNKER_PORT
ARG BUNKER_PORT_SECRET
ENV BUNKER_PORT_SECRET=$BUNKER_PORT_SECRET
ARG SERVER_PORT
ENV SERVER_PORT=$SERVER_PORT
ARG SERVER_URL
ENV SERVER_URL=$SERVER_URL
ARG WS_SERVER_URL
ENV WS_SERVER_URL=$WS_SERVER_URL
ARG PRESET_ENABLE
ENV PRESET_ENABLE=$PRESET_ENABLE
ARG PRESET_WORKING_DIR
ENV PRESET_WORKING_DIR=$PRESET_WORKING_DIR
ARG PRESET_SCRIPT
ENV PRESET_SCRIPT=$PRESET_SCRIPT
ARG PRESET_ENCRYPTED_URI
ENV PRESET_ENCRYPTED_URI=$PRESET_ENCRYPTED_URI
ARG PRESET_ENCRYPTED_PASSWORD
ENV PRESET_ENCRYPTED_PASSWORD=$PRESET_ENCRYPTED_PASSWORD


WORKDIR /app

COPY --from=builder /app .

CMD sh ./scripts/build-koyeb.sh
