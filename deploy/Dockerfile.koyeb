FROM openjdk:17-jdk AS builder

ARG COMPOSE_PROFILES
ENV COMPOSE_PROFILES=$COMPOSE_PROFILES
ARG COMPOSE_PROJECT_NAME
ENV COMPOSE_PROJECT_NAME=$COMPOSE_PROJECT_NAME
ARG STACK_VERSION
ENV STACK_VERSION=$STACK_VERSION
ARG CLUSTER_NAME
ENV CLUSTER_NAME=$CLUSTER_NAME
ARG LICENSE
ENV LICENSE=$LICENSE
ARG KIBANA_PORT
ENV KIBANA_PORT=$KIBANA_PORT
ARG KIBANA_PASSWORD
ENV KIBANA_PASSWORD=$KIBANA_PASSWORD
ARG ENCRYPTION_KEY
ENV ENCRYPTION_KEY=$ENCRYPTION_KEY
ARG ELASTIC_URL
ENV ELASTIC_URL=$ELASTIC_URL
ARG ES_PORT
ENV ES_PORT=$ES_PORT
ARG CERT_FILE
ENV CERT_FILE=$CERT_FILE
ARG ELASTIC_NAME
ENV ELASTIC_NAME=$ELASTIC_NAME
ARG ELASTIC_PASSWORD
ENV ELASTIC_PASSWORD=$ELASTIC_PASSWORD
ARG MINIO_URL
ENV MINIO_URL=$MINIO_URL
ARG MINIO_PORT
ENV MINIO_PORT=$MINIO_PORT
ARG MINIO_PORT_CONSOLE
ENV MINIO_PORT_CONSOLE=$MINIO_PORT_CONSOLE
ARG MINIO_NAME
ENV MINIO_NAME=$MINIO_NAME
ARG MINIO_PASS
ENV MINIO_PASS=$MINIO_PASS
ARG BUNKER_VERSION
ENV BUNKER_VERSION=$BUNKER_VERSION
ARG BUNKER_PORT
ENV BUNKER_PORT=$BUNKER_PORT
ARG BUNKER_PORT_SECRET
ENV BUNKER_PORT_SECRET=$BUNKER_PORT_SECRET
ARG SERVER_PORT
ENV SERVER_PORT=$SERVER_PORT
ARG SERVER_URL
ENV SERVER_URL=$SERVER_URL
ARG WS_SERVER_URL
ENV WS_SERVER_URL=$WS_SERVER_URL
ARG DATABASE_URI
ENV DATABASE_URI=$DATABASE_URI
ARG DATABASE_PORT
ENV DATABASE_PORT=$DATABASE_PORT
ARG DATABASE_DB
ENV DATABASE_DB=$DATABASE_DB
ARG DATABASE_DRIVER
ENV DATABASE_DRIVER=$DATABASE_DRIVER
ARG DATABASE_USER
ENV DATABASE_USER=$DATABASE_USER
ARG DATABASE_PASS
ENV DATABASE_PASS=$DATABASE_PASS
ARG DATABASE_FRONT
ENV DATABASE_FRONT=$DATABASE_FRONT
ARG HMAC_KEY
ENV HMAC_KEY=$HMAC_KEY

RUN microdnf install findutils

WORKDIR /app

COPY . .

COPY <<EOF ./generated-mini.env
COMPOSE_PROFILES=${COMPOSE_PROFILES}
COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
STACK_VERSION=${STACK_VERSION}
CLUSTER_NAME=${CLUSTER_NAME}
LICENSE=${LICENSE}
KIBANA_PORT=${KIBANA_PORT}
KIBANA_PASSWORD=${KIBANA_PASSWORD}
ENCRYPTION_KEY=${ENCRYPTION_KEY}
ELASTIC_URL=${ELASTIC_URL}
ES_PORT=${ES_PORT}
CERT_FILE=${CERT_FILE}
ELASTIC_NAME=${ELASTIC_NAME}
ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
MINIO_URL=${MINIO_URL}
MINIO_PORT=${MINIO_PORT}
MINIO_PORT_CONSOLE=${MINIO_PORT_CONSOLE}
MINIO_NAME=${MINIO_NAME}
MINIO_PASS=${MINIO_PASS}
BUNKER_VERSION=${BUNKER_VERSION}
BUNKER_PORT=${BUNKER_PORT}
BUNKER_PORT_SECRET=${BUNKER_PORT_SECRET}
SERVER_PORT=${SERVER_PORT}
SERVER_URL=${SERVER_URL}
WS_SERVER_URL=${WS_SERVER_URL}
DATABASE_URI=${DATABASE_URI}
DATABASE_PORT=${DATABASE_PORT}
DATABASE_DB=${DATABASE_DB}
DATABASE_DRIVER=${DATABASE_DRIVER}
DATABASE_USER=${DATABASE_USER}
DATABASE_PASS=${DATABASE_PASS}
DATABASE_FRONT=${DATABASE_FRONT}
HMAC_KEY=${HMAC_KEY}
EOF

RUN sed -i 's/\r$//' scripts/build-server.sh
RUN sed -i 's/\r$//' gradlew
RUN sed -i 's/buildkonfig.flavor=dev/buildkonfig.flavor=generated-mini/' gradle.properties
RUN sed -i 's/server.prod=false/server.prod=true/' gradle.properties

RUN --mount=type=cache,target=/root/.gradle \
    sh scripts/build-server.sh

FROM koyeb/docker-compose

ARG COMPOSE_PROFILES
ENV COMPOSE_PROFILES=$COMPOSE_PROFILES
ARG COMPOSE_PROJECT_NAME
ENV COMPOSE_PROJECT_NAME=$COMPOSE_PROJECT_NAME
ARG STACK_VERSION
ENV STACK_VERSION=$STACK_VERSION
ARG CLUSTER_NAME
ENV CLUSTER_NAME=$CLUSTER_NAME
ARG LICENSE
ENV LICENSE=$LICENSE
ARG KIBANA_PORT
ENV KIBANA_PORT=$KIBANA_PORT
ARG KIBANA_PASSWORD
ENV KIBANA_PASSWORD=$KIBANA_PASSWORD
ARG ENCRYPTION_KEY
ENV ENCRYPTION_KEY=$ENCRYPTION_KEY
ARG ELASTIC_URL
ENV ELASTIC_URL=$ELASTIC_URL
ARG ES_PORT
ENV ES_PORT=$ES_PORT
ARG CERT_FILE
ENV CERT_FILE=$CERT_FILE
ARG ELASTIC_NAME
ENV ELASTIC_NAME=$ELASTIC_NAME
ARG ELASTIC_PASSWORD
ENV ELASTIC_PASSWORD=$ELASTIC_PASSWORD
ARG MINIO_URL
ENV MINIO_URL=$MINIO_URL
ARG MINIO_PORT
ENV MINIO_PORT=$MINIO_PORT
ARG MINIO_PORT_CONSOLE
ENV MINIO_PORT_CONSOLE=$MINIO_PORT_CONSOLE
ARG MINIO_NAME
ENV MINIO_NAME=$MINIO_NAME
ARG MINIO_PASS
ENV MINIO_PASS=$MINIO_PASS
ARG BUNKER_VERSION
ENV BUNKER_VERSION=$BUNKER_VERSION
ARG BUNKER_PORT
ENV BUNKER_PORT=$BUNKER_PORT
ARG BUNKER_PORT_SECRET
ENV BUNKER_PORT_SECRET=$BUNKER_PORT_SECRET
ARG SERVER_PORT
ENV SERVER_PORT=$SERVER_PORT
ARG SERVER_URL
ENV SERVER_URL=$SERVER_URL
ARG WS_SERVER_URL
ENV WS_SERVER_URL=$WS_SERVER_URL
ARG DATABASE_URI
ENV DATABASE_URI=$DATABASE_URI
ARG DATABASE_PORT
ENV DATABASE_PORT=$DATABASE_PORT
ARG DATABASE_DB
ENV DATABASE_DB=$DATABASE_DB
ARG DATABASE_DRIVER
ENV DATABASE_DRIVER=$DATABASE_DRIVER
ARG DATABASE_USER
ENV DATABASE_USER=$DATABASE_USER
ARG DATABASE_PASS
ENV DATABASE_PASS=$DATABASE_PASS
ARG DATABASE_FRONT
ENV DATABASE_FRONT=$DATABASE_FRONT
ARG HMAC_KEY
ENV HMAC_KEY=$HMAC_KEY

WORKDIR /app

COPY deploy .

COPY scripts .

COPY --from=builder /app/server/build/libs/*-all.jar .

CMD sh ./build-koyeb.sh